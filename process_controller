#!/usr/bin/env python3

import logging
import os
import requests
import sys
import time

from subprocess import call
from datetime import datetime

logging.basicConfig(level=logging.INFO)

if len(sys.argv) != 3:
    print("usage: process_controller <working-directory> <auth-file>", file=sys.stderr)
    sys.exit(1)

working_directory = sys.argv[1]
auth_file = sys.argv[2]

os.chdir(working_directory)

# This script gets called during startup.  Network services
# might not be completely ready.  So wait until the network
# is ready before continuing
while True:
    response = None
    try:
        response = requests.get('https://www.google.com')
    except Exception as e:
        logging.info(f"Couldn't connect to some random site: {e}")
        time.sleep(2)
        pass

    if response:
        logging.info("Internet connection working.  Continuing")
        break

while True:
    call(["git", "pull"])

    start = datetime.now()
    command_line = ['./start_frame', '--auth-file', auth_file]
    logging.info(f"Running command: {command_line}")
    exit_code = call(command_line)

    logging.info(f"Exited with code {exit_code}")
    if exit_code == 2:
        # user asked that we quit
        break

    # the program could have quit for a couple
    # reasons:
    # - it could have reached the --end-after
    #   date.  in that case, restart immediately
    # - the subprocess could have failed.  maybe
    #   the latest version of the code, downloaded
    #   from github, is broken
    #
    # either way, we want to resume the whole
    # git pull/run process. wait at least an hour
    # between runs, though, so wait until the
    # next hour before doing anything
    duration = datetime.now() - start
    time.sleep(max([0, 3600 - duration.total_seconds()]))
